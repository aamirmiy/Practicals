

Section .data
title: db 0x0A,"***** BuBbLe SoRt *****", 0x0A
title_len: equ $-title
openmsg: db "File Opened Successfully",0x0A
openmsg_len: equ $-openmsg
closemsg: db "File Closed Successfully",0x0A
closemsg_len: equ $-closemsg
errormsg: db "Failed to open file", 0x0A
errormsg_len: equ $-errormsg
sortmsg: db "Ascending order"
sortmsg_len: equ $-sortmsg
descmsg: db "Descending order"
descmsg_len: equ $-descmsg
m1: db "",0x0A
l1: equ $-m1
f1name: db 'sample.txt', 0

Section .bss
buffer: resb 200
bufercpy: resb 200
bufferlen:resb 8
cnt1:resb 8
cnt2: resb 8
fdis:resb 8
%macro scall 4
mov rax,%1
mov rdi,%2
mov rsi,%3
mov rdx,%4
syscall
%endmacro
Section .text
global main
main:
	scall 1,1,title,title_len
	scall 2,f1name,2,777  ;Opening file

	mov qword[fdis],rax
	mov rbx,02H
	 	
	bt rax,63	
	jc ERROR
	scall 1,1,openmsg,openmsg_len
	jmp next1

ERROR:
	scall 1,1,errormsg,errormsg_len
	jmp EXIT

next1:
	scall 0,[fdis],buffer,200	
	;rax contains actual number of bytes read
	mov qword[bufferlen],rax ;for rounds
	mov qword[cnt1],rax 
	mov qword[cnt2],rax 

	;Ascending order
BUBBLE:
mov al,06H
mov byte[cnt1],al
mov rsi,buffer
mov rdi,buffer+2
loop:
mov bl,byte[rsi]
mov cl,byte[rdi]
	cmp bl,cl
	jae SWAP
	ADD rsi,2
	ADD rdi,2
	dec byte[cnt1]
	jnz loop
dec byte[bufferlen]
jnz BUBBLE
jmp END
SWAP:
	mov byte[rsi],cl
	mov byte[rdi],bl
	ADD rsi,2
	ADD rdi,2
	dec byte[cnt1]
	jnz loop
dec byte[bufferlen]
jnz BUBBLE

END:
scall 1,1,sortmsg,sortmsg_len
scall 1,1,m1,l1
scall 1,1, buffer,qword[cnt2]
scall 1,qword[fdis],sortmsg,sortmsg_len  ;writing to sample.txt
scall 1,qword[fdis],buffer,qword[cnt2]  ;writing content to sample.txt(ascending)

;Descending order
BUBBLE1:
mov al,06H
mov byte[cnt1],al
mov rsi,buffer
mov rdi,buffer+2
loop1:
mov bl,byte[rsi]
mov cl,byte[rdi]
	cmp bl,cl
	jbe SWAP1
	ADD rsi,2
	ADD rdi,2
	dec byte[cnt1]
	jnz loop1
dec byte[bufferlen]
jnz BUBBLE1
jmp END1
SWAP1:
	mov byte[rsi],cl
	mov byte[rdi],bl
	ADD rsi,2
	ADD rdi,2
	dec byte[cnt1]
	jnz loop1
dec byte[bufferlen]
jnz BUBBLE1
END1:
scall 1,1,descmsg,descmsg_len
scall 1,1,m1,l1
scall 1,1, buffer,qword[cnt2]

;printing in text file

scall 1,qword[fdis],descmsg,descmsg_len  ;writing to sample.txt
scall 1,qword[fdis],buffer,qword[cnt2]  ;writing content to sample.txt(descending)

;Closing file
	mov rax,3
	mov rdi,f1name
	syscall
	scall 1,1,m1,l1
	scall 1,1,closemsg,closemsg_len
EXIT:
	mov rax,60
	mov rdi,0
	syscall
